with customers as (
    select * from {{ ref('stg_customers') }}
),

orders as (
   select * from {{ ref('stg_orders') }}
),

customer_orders as (
   select
       customer_id,
       min(order_date) as first_order_date,
       max(order_date) as most_recent_order_date,
       count(order_id) as number_of_orders
   from orders
   group by customer_id
),

final as (
   select
       customers.customer_id,
       customers.first_name,
       customers.last_name,
       customer_orders.first_order_date,
       customer_orders.most_recent_order_date,
       coalesce (customer_orders.number_of_orders, 0)
       as number_of_orders

   from customers
   left join customer_orders using (customer_id)
)
select * from final





-----------------------------------------------------------------
profiles.yml
-----------------------------------------------------------------

config:
    use_colors: True 
jaffle_shop:
  outputs:
    dev:
      type: postgres
      threads: 1
      host: localhost
      port: 5432
      user: "docker"
      pass: "docker"
      dbname: "raw"
      schema: "dev"
  target: dev

-----------------------------------------------------------------
sources.yml
-----------------------------------------------------------------

version: 2

sources:
  - name: jaffle_shop
    description: A clone of a Postgres application database.
    database: raw
    schema: jaffle_shop
    tables:
      - name: customers
        description: Raw customers data.
        columns:
          - name: id
            description: Primary key for customers.
      - name: orders
        description: Raw orders data.
        columns:
          - name: id
            description: Primary key for orders.

  - name: stripe
    database: raw
    schema: stripe
    tables:
      - name: payment

-----------------------------------------------------------------
stg_customers.sql
-----------------------------------------------------------------

select
    id as customer_id,
    first_name,
    last_name
from
    {{ source ('jaffle_shop', 'customers') }}


-----------------------------------------------------------------
stg_orders.sql
-----------------------------------------------------------------

select
    id as order_id,
    user_id as customer_id,
    order_date,
    status
from 
    {{ source ('jaffle_shop', 'orders') }}


-----------------------------------------------------------------
stg_payments.sql
-----------------------------------------------------------------

select
    id as payment_id,
    orderid as order_id,
    paymentmethod as payment_method,
    status,
    -- amount is stored in cents, convert it to dollars
    amount / 100 as amount,
    created as created_at
from {{ source ('stripe', 'payment') }}


------------------------------------------------------------------
fct_orders.sql
------------------------------------------------------------------

with orders as  (
    select * from {{ ref ('stg_orders' )}}
),

payments as (
    select * from {{ ref ('stg_payments') }}
),

order_payments as (
    select
        order_id,
        sum (case when status = 'success' then amount end) as amount

    from payments
    group by order_id
),

 final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        coalesce (order_payments.amount, 0) as amount

    from orders
    left join order_payments using (order_id)
)

select * from final

-----------------------------------------------------------
dim_customers.sql
-----------------------------------------------------------

with customers as (

     select * from {{ ref('stg_customers') }}

),

orders as ( 

    select * from {{ ref('fct_orders') }}

),

customer_orders as (

    select
        customer_id,
        min(order_date) as first_order_date,
        max(order_date) as most_recent_order_date,
        count(order_id) as number_of_orders,
        sum(amount) as lifetime_value
    from orders

    group by customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order_date,
        customer_orders.most_recent_order_date,
        coalesce (customer_orders.number_of_orders, 0) as number_of_orders,
        customer_orders.lifetime_value

    from customers
    left join customer_orders using (customer_id)

)

select * from final


------------------------------------------------------
schema.yml
------------------------------------------------------

  - name: stg_customers
    columns: 
      - name: customer_id
        tests:
          - unique
          - not_null
